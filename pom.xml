<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>pt.cmg</groupId>
    <artifactId>jakartautils</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>Utility libraries for Payara-based Jakarta EE projects</name>

    <developers>
        <developer>
            <id>001</id>
            <name>Carlos Gon√ßalves</name>
            <email>carlosmoliveiragoncalves@gmail.com</email>
            <roles>
                <role>architect</role>
                <role>developer</role>
            </roles>
        </developer>
    </developers>
    
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>
    
    <repositories>
        <repository>
            <id>payara-nexus-artifacts</id>
            <name>Payara Nexus Artifacts</name>
            <url>https://nexus.payara.fish/repository/payara-artifacts</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <properties>

        <!-- General properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- JAVA version -->
        <java-version>11</java-version>

        <!-- Maven plugin versions -->
        <clean-plugin-version>3.2.0</clean-plugin-version>
        <compiler-plugin-version>3.10.1</compiler-plugin-version>
        <source-plugin-version>3.2.0</source-plugin-version>
        <deploy-plugin-version>3.0.0-M1</deploy-plugin-version>
        <install-plugin-version>3.0.0-M1</install-plugin-version>
        <jacoco-plugin-version>0.8.8</jacoco-plugin-version>
        <jar-plugin-version>3.1.2</jar-plugin-version>
        <resources-plugin-version>3.2.0</resources-plugin-version>
        <surefire-plugin-version>3.0.0-M7</surefire-plugin-version>
        <surefire-reporting-plugin-version>3.0.0-M7</surefire-reporting-plugin-version>
        <code-replacer-plugin-version>1.5.3</code-replacer-plugin-version>

        <!-- Test -->
        <junit-version>5.9.3</junit-version>
        <mockito-version>5.3.1</mockito-version>
        <hamcrest-version>2.2</hamcrest-version>
        <rest-assured-version>5.3.0</rest-assured-version>
        <rest-assured-json-schema-version>5.3.0</rest-assured-json-schema-version>
        <mock-ftpserver-version>2.8.0</mock-ftpserver-version>


        <!-- 3rd party dependencies -->
        <commons-io-version>2.11.0</commons-io-version>
        <commons-validator-version>1.7</commons-validator-version>
        <coobird-thumbnailator-version>0.4.17</coobird-thumbnailator-version>
        <drewnoakes-metadataextractor-version>2.18.0</drewnoakes-metadataextractor-version>
        <hibernate.validator-version>6.1.5.Final</hibernate.validator-version>
        <jakarta.jakartaee-api-version>8.0.0</jakarta.jakartaee-api-version>
        <jboss-weld-version>3.1.8.Final</jboss-weld-version>
        <owasp-encoder-version>1.2.3</owasp-encoder-version>
        <yasson-version>1.0.11</yasson-version>

    </properties>

    <dependencies>

        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>${jakarta.jakartaee-api-version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- 3rd party dependencies-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io-version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>yasson</artifactId>
            <version>${yasson-version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${commons-validator-version}</version>
        </dependency>
        <dependency>
            <groupId>org.owasp.encoder</groupId>
            <artifactId>encoder</artifactId>
            <version>${owasp-encoder-version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate.validator-version}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.junit</groupId>
            <artifactId>junit-bom</artifactId>
            <version>${junit-version}</version>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest-version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${rest-assured-version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>${rest-assured-json-schema-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mailapi</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven Clean Plugin , used to clean up after build -->
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean-plugin-version}</version>
                </plugin>

                <!-- Maven Compiler Plugin , for JARs -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler-plugin-version}</version>
                    <configuration>
                        <release>${java-version}</release>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <!-- Maven Source Plugin , to automatically generate sources jar -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source-plugin-version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Maven Deploy plugin, to deploy built artifacts to a remote
                repository, not that we use it but at least this version is
                controlled -->
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy-plugin-version}</version>
                </plugin>

                <!-- Maven Install plugin, install the build artifacts into the
                LOCAL repository -->
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${install-plugin-version}</version>
                </plugin>

                <!-- Maven Resources plugin, copies the resources to output
                directory to include in final JAR -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${resources-plugin-version}</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>
            <!--force the source plugin to be executed on build -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
